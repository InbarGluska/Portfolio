import React, { useEffect, useRef } from 'react';
import Head from 'next/head';
import styled, { createGlobalStyle } from 'styled-components';
import * as THREE from 'three';
import { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';
import App from './App';

const GlobalStyle = createGlobalStyle`
  main {
    margin: 0;
    font-family: "Montserrat", sans-serif;
    position: absolute;
  }
`;

const Container = styled.div`
  display: flex;
  justify-content: center;
  align-items: center;
  height: 150vh;
  position: relative;
`;

const Content = styled.div`
  // background-color: #161748; /* Purple baseline */
  padding: 40px;
  border-radius: 10px;
  box-shadow: 0px 0px 20px 0px rgba(0, 0, 0, 0.1);
  text-align: left;
  max-width: 600px;
  width: 100%;
  z-index: 1; /* Ensure content is above the background */
`;

const BackgroundCanvas = styled.canvas`
  position: absolute;
  top: 0;
  left: 0;
  z-index: -1;
`;

const Header = styled.h1`
  font-size: 36px;
  color: #f95d9b; /* Pink highlight */
  margin-bottom: 20px;
`;

const Paragraph = styled.p`
  font-size: 18px;
  line-height: 1.6;
  margin-bottom: 20px;
`;

const TechStack = styled.div`
  font-size: 16px;
  margin-top: 20px;
  font-weight: bold;
  color: #ffffff; /* White text on purple background */
`;

const GoalsList = styled.ul`
  font-size: 16px;
  margin-top: 20px;
  list-style: none;
  padding: 0;
`;

const GoalItem = styled.li`
  margin-bottom: 10px;
`;

const ContactInfo = styled.div`
  font-size: 16px;
  margin-top: 20px;
  color: #39a0ca; /* Bluewater lowlight */
`;

const ProjectLink = styled.a`
  color: #f95d9b; /* Pink highlight */
  text-decoration: none;
  &:hover {
    text-decoration: underline;
  }
`;

const ThreeAnimation = () => {
  const canvasRef = useRef(null);

  useEffect(() => {
    const scene = new THREE.Scene();
    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);
    const renderer = new THREE.WebGLRenderer({
      canvas: canvasRef.current,
    });

    // Set canvas size to window size
    renderer.setSize(window.innerWidth, window.innerHeight);

    const geometry = new THREE.TorusGeometry(20, 3, 16, 100);
    const material = new THREE.MeshStandardMaterial({ color: 0x04364A });
    const torus = new THREE.Mesh(geometry, material);

    scene.add(torus);

    camera.position.setZ(30);

    const pointLight = new THREE.PointLight(0xffffff);
    pointLight.position.set(5, 5, 5);

    const ambientLight = new THREE.AmbientLight(0xffffff);
    scene.add(pointLight, ambientLight);

    const addStar = () => {
      const geometry = new THREE.SphereGeometry(0.25, 24, 24);
      const material = new THREE.MeshStandardMaterial({ color: 0xffffff });
      const star = new THREE.Mesh(geometry, material);

      const [x, y, z] = Array(3)
        .fill()
        .map(() => THREE.MathUtils.randFloatSpread(100)); 

      star.position.set(x, y, z);
      scene.add(star);
    };

    Array(200).fill().forEach(addStar);

    function moveCamera() {
      const t = document.body.getBoundingClientRect().top;
      torus.rotation.x += 0.05;
      torus.rotation.y += 0.075;
      torus.rotation.z += 0.05;
    
      // jeff.rotation.y += 0.01;
      // jeff.rotation.z += 0.01;
    
      camera.position.z = t * -0.01;
      camera.position.x = t * -0.0002;
      camera.rotation.y = t * -0.0002;
    }
    
    document.body.onscroll = moveCamera;
    moveCamera();

    const animate = () => {
      requestAnimationFrame(animate);

      torus.rotation.x += 0.001;
      torus.rotation.y += 0.001;

      renderer.render(scene, camera);
    };

    animate();

    const handleResize = () => {
      const width = window.innerWidth;
      const height = window.innerHeight;

      camera.aspect = width / height;
      camera.updateProjectionMatrix();

      renderer.setSize(width, height);
    };

    window.addEventListener('resize', handleResize);

    return () => {
      scene.remove(torus);
      geometry.dispose();
      material.dispose();
      renderer.dispose();

      window.removeEventListener('resize', handleResize);
    };
  }, []);

  return <canvas ref={canvasRef} style={{ position: 'fixed', top: 0, left: 0, zIndex: -1 }} />;
};

export default function Home() {
  return (
    <main>
      <GlobalStyle/>
      <Head>
        <title>Portfolio</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Container>
        <ThreeAnimation />
        <Content>
          <Header>Hi there! 👋 I'm Inbar Gluska</Header>
          <Paragraph>
            After many years of experience in Human Resources ranging from recruitment to employee management, I'm very
            excited to start my journey as a Full Stack Web Developer. I am curious and eager to learn new skills and
            ways to utilize my talents, such as integrating into teams and learning quickly. My creativity and attention
            to detail are my strengths, and I am positive that they will be valuable assets in my tech career. I am
            actively seeking a position in an environment where I can grow professionally and collaborate with
            like-minded individuals.
          </Paragraph>
          <Paragraph>
            After many years of experience in Human Resources ranging from recruitment to employee management, I'm very
            excited to start my journey as a Full Stack Web Developer. I am curious and eager to learn new skills and
            ways to utilize my talents, such as integrating into teams and learning quickly. My creativity and attention
            to detail are my strengths, and I am positive that they will be valuable assets in my tech career. I am
            actively seeking a position in an environment where I can grow professionally and collaborate with
            like-minded individuals.
          </Paragraph>
          <Paragraph>
            After many years of experience in Human Resources ranging from recruitment to employee management, I'm very
            excited to start my journey as a Full Stack Web Developer. I am curious and eager to learn new skills and
            ways to utilize my talents, such as integrating into teams and learning quickly. My creativity and attention
            to detail are my strengths, and I am positive that they will be valuable assets in my tech career. I am
            actively seeking a position in an environment where I can grow professionally and collaborate with
            like-minded individuals.
          </Paragraph>
          <TechStack>
            <p>💻 Tech Stack</p>
            <p>HTML5 CSS3 JavaScript React Node.js</p>
          </TechStack>
          <GoalsList>
            <GoalItem>🌱 Learning and mastering new technologies</GoalItem>
            <GoalItem>🤝 Collaborating with passionate developers</GoalItem>
            <GoalItem>🌟 Contributing to open source projects</GoalItem>
            <GoalItem>📚 Sharing knowledge and learning from the community</GoalItem>
          </GoalsList>
          <ContactInfo>
            <p>📫 Let's Connect</p>
            <p>InbarGluska</p>
            <p>Email: inbargluska@gmail.com</p>
          </ContactInfo>
          <Paragraph>Looking forward to new challenges and exciting opportunities! 😊</Paragraph>
          <ProjectLink href="https://coffee-snobs-coral.vercel.app/" target="_blank">
            Check out my recent project
          </ProjectLink>
        </Content>
      </Container>
    </main>
  );
}
